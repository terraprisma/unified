--- decompiled/TerrariaClientWindows/Terraria/Map/WorldMap.cs
+++ decompiled/TerrariaClientLinux/Terraria/Map/WorldMap.cs
@@ -80,21 +_,23 @@
 		if ((isCloudSave && SocialAPI.Cloud == null) || !Main.mapEnabled) {
 			return;
 		}
-		string text = Main.playerPathName.Substring(0, Main.playerPathName.Length - 4) + Path.DirectorySeparatorChar;
+		string text = Main.playerPathName.Substring(0, Main.playerPathName.Length - 4);
+		char directorySeparatorChar = Path.DirectorySeparatorChar;
+		string text2 = text + directorySeparatorChar;
 		if (Main.ActiveWorldFileData.UseGuidAsMapName) {
-			string text2 = text;
+			string text3 = text2;
-			text = string.Concat(text, Main.ActiveWorldFileData.UniqueId, ".map");
+			text2 = string.Concat(text2, Main.ActiveWorldFileData.UniqueId, ".map");
-			if (!FileUtilities.Exists(text, isCloudSave)) {
+			if (!FileUtilities.Exists(text2, isCloudSave)) {
-				text = text2 + Main.worldID + ".map";
+				text2 = text3 + Main.worldID + ".map";
 			}
 		} else {
-			text = text + Main.worldID + ".map";
+			text2 = text2 + Main.worldID + ".map";
 		}
-		if (!FileUtilities.Exists(text, isCloudSave)) {
+		if (!FileUtilities.Exists(text2, isCloudSave)) {
 			Main.MapFileMetadata = FileMetadata.FromCurrentSettings(FileType.Map);
 			return;
 		}
-		using MemoryStream input = new MemoryStream(FileUtilities.ReadAllBytes(text, isCloudSave));
+		using MemoryStream input = new MemoryStream(FileUtilities.ReadAllBytes(text2, isCloudSave));
 		using BinaryReader binaryReader = new BinaryReader(input);
 		try {
 			int num = binaryReader.ReadInt32();
@@ -117,7 +_,7 @@
 				streamWriter.WriteLine("");
 			}
 			if (!isCloudSave) {
-				File.Copy(text, text + ".bad", overwrite: true);
+				File.Copy(text2, text2 + ".bad", overwrite: true);
 			}
 			Clear();
 		}
