--- decompiled/TerrariaBuildable/Terraria/Audio/LegacyAudioSystem.cs
+++ decompiled/TerrariaUnified/Terraria/Audio/LegacyAudioSystem.cs
@@ -69,6 +_,12 @@
 	private IAudioTrack FindReplacementTrack(List<IContentSource> sources, string assetPath)
 	{
 		IAudioTrack audioTrack = null;
+		if (Main.dedServ) {
+			for (int i = 0; i < sources.Count; i++) {
+				sources[i].HasAsset(assetPath);
+			}
+			return null;
+		}
 		for (int i = 0; i < sources.Count; i++) {
 			IContentSource contentSource = sources[i];
 			if (!contentSource.HasAsset(assetPath)) {
@@ -103,10 +_,16 @@
 
 	public LegacyAudioSystem()
 	{
+		/*
 		Engine = new AudioEngine("Content\\TerrariaMusic.xgs");
 		SoundBank = new SoundBank(Engine, "Content\\Sound Bank.xsb");
 		Engine.Update();
 		WaveBank = new WaveBank(Engine, "Content\\Wave Bank.xwb", 0, 512);
+		*/
+		Engine = new AudioEngine(Path.Combine(Main.instance.Content.RootDirectory, "TerrariaMusic.xgs"));
+		SoundBank = new SoundBank(Engine, Path.Combine(Main.instance.Content.RootDirectory, "Sound Bank.xsb"));
+		Engine.Update();
+		WaveBank = new WaveBank(Engine, Path.Combine(Main.instance.Content.RootDirectory, "Wave Bank.xwb"), 0, 512);
 		Engine.Update();
 		AudioTracks = new IAudioTrack[Main.maxMusic];
 		TrackNamesByIndex = new Dictionary<int, string>();
